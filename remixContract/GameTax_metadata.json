{
    "compiler": {
        "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
        "abi": [
            {
                "inputs": [],
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "who",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "string",
                        "name": "proofKey",
                        "type": "string"
                    }
                ],
                "name": "TaxProofIssued",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "who",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "enum GameTax.Category",
                        "name": "category",
                        "type": "uint8"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "itemId",
                        "type": "uint256"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "timestamp",
                        "type": "uint256"
                    }
                ],
                "name": "TransactionRecorded",
                "type": "event"
            },
            {
                "inputs": [
                    {
                        "internalType": "string",
                        "name": "proofKey",
                        "type": "string"
                    }
                ],
                "name": "getProofOwner",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "who",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "idx",
                        "type": "uint256"
                    }
                ],
                "name": "getTransaction",
                "outputs": [
                    {
                        "internalType": "enum GameTax.Category",
                        "name": "",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "who",
                        "type": "address"
                    }
                ],
                "name": "getTransactionCount",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "idx",
                        "type": "uint256"
                    }
                ],
                "name": "getUser",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "getUserCount",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "string",
                        "name": "proofKey",
                        "type": "string"
                    }
                ],
                "name": "issueTaxProof",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "enum GameTax.Category",
                        "name": "category",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint256",
                        "name": "itemId",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "proofKey",
                        "type": "string"
                    }
                ],
                "name": "recordAndProof",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "taxAuthority",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "devdoc": {
            "kind": "dev",
            "methods": {
                "recordAndProof(uint8,uint256,uint256,string)": {
                    "params": {
                        "category": "The category enum (0=Income,1=Expense,2=CapitalGain)",
                        "itemId": "Identifier for the item/NFT",
                        "price": "Net price (after tax deduction applied off-chain)",
                        "proofKey": "Unique string proof (e.g. txHash or UUID) to map back to the user"
                    }
                }
            },
            "version": 1
        },
        "userdoc": {
            "kind": "user",
            "methods": {
                "getProofOwner(string)": {
                    "notice": "Lookup who issued a given proofKey"
                },
                "getTransaction(address,uint256)": {
                    "notice": "Retrieve a specific transaction"
                },
                "getTransactionCount(address)": {
                    "notice": "How many transactions a user has recorded"
                },
                "getUser(uint256)": {
                    "notice": "Fetch the nth userâ€™s address"
                },
                "getUserCount()": {
                    "notice": "Total distinct users who have recorded"
                },
                "issueTaxProof(string)": {
                    "notice": "Issue proof without recording a new transaction"
                },
                "recordAndProof(uint8,uint256,uint256,string)": {
                    "notice": "Bundles recording a transaction and issuing a proof in one on-chain call"
                }
            },
            "version": 1
        }
    },
    "settings": {
        "compilationTarget": {
            "contracts/TaxBot.sol": "GameTax"
        },
        "evmVersion": "cancun",
        "libraries": {},
        "metadata": {
            "bytecodeHash": "ipfs"
        },
        "optimizer": {
            "details": {
                "constantOptimizer": false,
                "cse": false,
                "deduplicate": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "peephole": false,
                "simpleCounterForLoopUncheckedIncrement": true,
                "yul": false
            },
            "runs": 200
        },
        "remappings": []
    },
    "sources": {
        "contracts/TaxBot.sol": {
            "keccak256": "0x0dd899f9a834fab32dcb504fd33acfb5f4204b17f24e3ac29549c94ce34ede73",
            "license": "MIT",
            "urls": [
                "bzz-raw://65959784b1a1aa59cc5ffab0bd72322111ce6e28fe4c21a271783410e1754deb",
                "dweb:/ipfs/QmcS6tuemkpgDAqJiiTSdF8cE4j7rwuv4aXByuBvWXS6PC"
            ]
        }
    },
    "version": 1
}